/* dev.opera.com has a bunch of cross-browser stuff. */
/*
element.style,
styleSheet.addRule()?,
styleSheet.insertRule(),
styleSheet.deleteRule(),
<style>.sheet,
document.styleSheets[index].cssRules[index].cssText
element.querySelector(),
element.querySelectorAll(),
window.getComputedValue().getPropertyValue(),
CSS attr(),
and class manipulation
could be used to modify CSS
(in particular pseudo-elements)
*/

* {  /* makes everything include padding and borders in its height and width */
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}

:root {  /* This accesses the outer-most element (html). */
	--nav-slide-time: .8s;
}

html {
	min-width: 100%;
	min-height: 100%;
}

body {
	margin: 0%;
	min-width: 100%;
	min-height: 100%;
	padding: 0% 0% 4% 0%;
	background: #0000ee;  /* for browsers that don't support gradients */
	background: -webkit-repeating-linear-gradient(#0000ee, white 100vh, #0000ee 200vh);  /* Safari 5.1 to 6.0 */
	background: -o-repeating-linear-gradient(#0000ee, white 100vh, #0000ee 200vh);  /* Opera 11.1 to 12.0 */
	background: -moz-repeating-linear-gradient(#0000ee, white 100vh, #0000ee 200vh);  /* Firefox 3.6 to 15 */
	background: repeating-linear-gradient(#0000ee, white 100vh, #0000ee 200vh);  /* standard syntax */
	text-align: center;
}

main {
	/**
	meant to hold the main content of the page
	*/
	margin: 4% auto 0%;
	width: 90%;
	min-height: 100%;
	height: 100%;
	padding: 1% 5% 5% 5%;
	background: rgba(255, 255, 255, .5);
	overflow: auto;
}

p {
	text-align: justify;
	-moz-text-align-last: center;
	text-align-last: center;
}

div {
	margin: auto;
	display: inline-block;
}

nav {
	padding: 1rem;
	background: white;
	background: -webkit-repeating-linear-gradient(white, lightgray 100vh, white 200vh);
	background: -moz-repeating-linear-gradient(white, lightgray 100vh, white 200vh);
	background: -o-repeating-linear-gradient(white, lightgray 100vh, white 200vh);
	background: repeating-linear-gradient(white, lightgray 100vh, white 200vh);
	background-attachment: fixed;
}

iframe {
	border: none;
}

body.navigation {
	margin: 0em;
	padding: 1em;
	background: white;
	background: -webkit-repeating-linear-gradient(white, lightgray 100vh, white 200vh);
	background: -moz-repeating-linear-gradient(white, lightgray 100vh, white 200vh);
	background: -o-repeating-linear-gradient(white, lightgray 100vh, white 200vh);
	background: repeating-linear-gradient(white, lightgray 100vh, white 200vh);
	background-attachment: fixed;
}
nav div {
	overflow: auto;
}
body.navigation h2, nav h2 {
	margin-top: 0rem;
}
body.navigation a {
	color: black;
}
body.navigation a:hover {
	font-weight: bold;
	text-decoration: none;
}
body.navigation ul, body.navigation ol, nav ul, nav ol {
	padding-left: 1em;
	padding-right: 0em;
	text-align: left;
}
body.navigation ul ul, body.navigation ol ul, nav ul ul, nav ol ul, body.navigation ul ol, body.navigation ol ol, nav ul ol, nav ol ol {
	padding-left: 2em;
}
body.navigation .nav-list-expander {
	/**
	makes sure that the whole navigation list doesn't move while the longest item is hovered over
	(allows the creation of a secret second list which makes the actual list long enough to accomodate bolding)
	*/
	visibility: hidden;
	margin-top: 0rem;
	margin-bottom: 0rem;
	padding-top: 0rem;
	padding-bottom: 0rem;
	height: 0rem;
	font-weight: bold;
}
body.navigation .nav-list-expander * {
	margin-top: 0rem;
	margin-bottom: 0rem;
	padding-top: 0rem;
	padding-bottom: 0rem;
	height: 0rem;
}
body.navigation li.expandable > a::after {
	content: " \0023f7";
}
body.navigation li.expandable ul, body.navigation li.expandable ol {
	display: block;
	height: 0rem;
	overflow: hidden;
	transition: height .4s;
}
body.navigation li.expandable:hover > a::after {
	content: " \0023f6";
}
body.navigation li.expandable:hover ul, body.navigation li.expandable:hover ol {
	height: auto;
}
body.navigation.bigger {
	font-size: 1.25rem;
}

iframe.left-nav, nav.left-nav {
	/**
	creates a fixed navigation section on the left side of the screen
	*/
	position: fixed;
	left: 0rem;
	top: 0rem;
	-moz-box-sizing: content-box;
	-webkit-box-sizing: content-box;
	box-sizing: content-box;
	border-right: .05em solid #aaaaaa;
	width: 20%;
	height: 100%;
}
body.left-nav {
	/**
	makes the body move over to make room for the navigation section on the left side of the screen
	*/
	margin: 0% 0% 0% 20%;
	min-width: 80%;
}

.elaborate {
	cursor: pointer;
}
.elaborate:hover {
	text-decoration: underline;
}
aside {
	position: fixed;
	left: 100%;
	top: 0%;
	z-index: 4;
	padding: 1em;
	border-left: .05em solid #aaaaaa;
	background-color: white;
	width: 40%;
	height: 100%;
	text-align: center;
	text-align-last: center;
	overflow: auto;
	transition: .8s;
	transition: var(--nav-slide-time);
}
aside h2 {
	margin-top: 0em;
}
aside::before {
	content: attr(data-heading);
	display: block;
	margin-bottom: 1em;
	text-align: center;
	font-size: 1.5em;
	font-weight: bold;
}
aside.displayed {
	left: 60%;
}
button.hide-aside {
	position: absolute;
	right: .5rem;
	top: .5rem;
	border: none;
	background: none;
	color: blue;
}
button.hide-aside::before {
	content: "[Hide]";
}
button.hide-aside:hover {
	text-decoration: underline;
}

.right-section {
	/**
	creates a fixed section on the right side of the screen
	*/
	position: fixed;
	right: 0em;
	top: 0em;
	border-left: .05em solid #aaaaaa;
	width: 20%;
	height: 100%;
}

body.right-section {
	/**
	makes the body move over to make room for a section on the right side of the screen
	*/
	position: static;
	margin: 0% 20% 0% 0%;
	border: none;
	min-width: 80%;
	height: auto;
}

body.left-nav.right-section {
	/**
	makes the body make room for a section on the left and right side of the screen
	*/
	margin: 0% 20% 0% 20%;
	min-width: 60%;
}

@keyframes allow-clicking {
	/**
	prevents hidden navigation contents from being clicked before the contents slide out
	*/
	from {
		pointer-events: none;
	}
	to {
		pointer-events: auto;
	}
}

nav.hidden-left-nav {
	/**
	creates a fixed navigation section hidden behind the left side of the screen
	*/
	position: fixed;
	left: -30.5vw;
	top: 0vh;
	z-index: 5;
	border-right: 1em solid #8888ff;
	width: 30.5vw;
	height: 100vh;
	padding: 0rem;
	transition: .8s;
	transition: var(--nav-slide-time);
}
nav.hidden-left-nav:hover {
	/**
	unhides the navigation section
	*/
	-ms-transform: translateX(30vw);  /* Internet Explorer 9 */
	-webkit-transform: translateX(30vw);  /* Safari */
	transform: translateX(30vw);  /* standard syntax */
	/* These aren't 30.5% because, otherwise, the far left end of the screen would stop the hovering. */
}
nav.hidden-left-nav::before {
	/**
	creates darkness to cover the rest of the screen
	*/
	content: "";
	position: absolute;
	left: calc(100% + 1em);
	left: calc(100% + attr(border-right-width length));
	top: 0%;
	width: 100vw;
	height: 100%;
	background: black;
	opacity: 0;
	pointer-events: none;
	transition: .8s;  /* I don't understand why this (or the next line) is necessary. */
	transition: var(--nav-slide-time);
}
nav.hidden-left-nav:hover::before {
	/**
	causes the darkness to fade in
	*/
	opacity: .8;
}
nav.hidden-left-nav::after {
	/**
	creates a tab sticking out of the side to access the hidden left navigation
	*/
	content: ">";
	position: absolute;
	left: calc(100% + .5em + .12em);
	left: calc(100% + attr(border-right-width length) / 2 + .12em);
	top: 46%;
	top: calc(50% - attr(height %, 8%) / 2);  /* This will only work when attr() supports non-string values (and fallbacks) */
	width: 8%;
	height: 8vh;
	display: -moz-flex;
	display: -webkit-flex;
	display: flex;
	justify-content: center;
	align-items: center;
	border: .05em solid #888888;
	border-left: none;
	border-radius: 0vh 1.5vh 1.5vh 0vh;
	background: #bbbbbb;
	font-family: monospace;
	font-size: 2em;
	color: #777777;
	-webkit-touch-callout: none;  /* iOS Safari */
	-webkit-user-select: none;  /* Safari */
	-khtml-user-select: none;  /* Konqueror HTML */
	-moz-user-select: none;  /* Firefox */
	-ms-user-select: none;  /* Internet Explorer and Microsoft Edge */
	user-select: none;  /* non-prefixed version of preventing text selection */
	cursor: default;
	pointer-events: auto;
}
nav.hidden-left-nav:hover::after {
	/**
	changes the arrow direction
	*/
	content: "<";
}
nav.hidden-left-nav > iframe {
	width: 100%;
	height: 100%;
}
nav.hidden-left-nav > * {
	pointer-events: none;
}
nav.hidden-left-nav:hover > * {
	animation-name: allow-clicking;
	animation-fill-mode: forwards;
	animation-delay: .25s;
}

iframe.top-nav, nav.top-nav, .site-editor {
	/**
	creates a navigation section that moves to the top and stays there
	*/
	position: -webkit-sticky;
	position: sticky;
	top: 0em;  /* sticky positioning doesn't work without a position specification */
	z-index: 1;
	padding: 0em;
	width: 90%;
	background: darkblue;
}
nav.top-nav div.drop-down, div div.drop-down {
	display: inline-table;
	position: relative;
	overflow: visible;
}
nav.top-nav div.drop-down > div:first-child, nav.top-nav > button, div div.drop-down > div:first-child, .site-editor > button {
	/**
	makes the part of the drop-down that you see
	or the buttons of a top navigation
	*/
	display: block;
	position: static;
	z-index: 1;
	padding: .5em;
	background: darkblue;
	font-size: 1.5em;
	color: steelblue;
	cursor: pointer;
}
nav.top-nav > button, .site-editor > button {
	display: inline-block;
	margin: 0em;
	border: none;
	font-family: serif;
}
nav.top-nav div.drop-down > div, div div.drop-down > div {
	/**
	makes the part of the drop-down that appears
	*/
	display: none;
	position: absolute;
	z-index: 2;
	background: steelblue;
	white-space: nowrap;
	cursor: default;
}
nav.top-nav label, div div.drop-down label {
	/**
	makes sure labels don't wrap strangely
	*/
	white-space: nowrap;
}
nav.top-nav div.drop-down:focus > div, nav.top-nav div.drop-down > div:hover, nav.top-nav div.drop-down:focus-within > div, div div.drop-down:focus > div, div div.drop-down > div:hover, div div.drop-down:focus-within > div {
	/**
	unhides the drop-down menu when focus is received
	<div>s need a tabindex to receive focus
	*/
	display: block;
}
nav.top-nav div.drop-down:hover > div:first-child, nav.top-nav > button:hover, nav.top-nav div.drop-down:focus > div:first-child, nav.top-nav div.drop-down:focus-within > div:first-child, div div.drop-down:hover > div:first-child, div div.drop-down:focus > div:first-child, div div.drop-down:focus-within > div:first-child {
	/**
	lightens the initially visible part of the drop-down
	when hovered or the drop-down part is visible
	*/
	background: lightsteelblue;
}
.site-editor {
	z-index: 9;
	border-bottom: .15em solid #888;
	background: #ddd;
}
.site-editor div.drop-down > div:first-child, .site-editor > button {
	z-index: 9;
	background: #ddd;
	color: black;
}
.site-editor div.drop-down:hover > div:first-child, .site-editor div.drop-down:focus > div:first-child, .site-editor div.drop-down:focus-within > div:first-child, .site-editor > button:hover {
	background: lightblue;
}
.site-editor div.drop-down div {
	z-index: 10;
	background: white;
}

a {
	text-decoration: none;
	cursor: pointer;
}
a:hover {
	text-decoration: underline;
}

ol, ul {
	display: table;  /* "width: fit-content" could replace this if Internet Explorer didn't matter */
	margin: .5em auto;
	padding-right: 1em;
	text-align: justify;
	-moz-text-align-last: left;
	text-align-last: left;
}
ul {
	padding-left: 2em;
}
li {
	margin-top: .5em;
	margin-bottom: .5em;
}
li ol, li ul {
	margin: 0em;
}

table {
	margin: 1rem auto;
	border: none;
	border-collapse: collapse;
	background: none;
	text-align: center;
}
th, td {
	border: .05em solid black;
	border-collapse: collapse;
	padding: .5em;
}
th {
	background: #dddddd;
}
td {
	background: white;
}
th *, td * {
	border: initial;
}

table.organizational th, table.organizational td {
	border: none;
	background: none;
}

table.labeled-list th {
	/**
	styles the label
	*/
	border: none;
	background: none;
	text-align: right;
	vertical-align: top;
}
table.labeled-list td {
	/**
	styles the "list" item
	*/
	border: none;
	background: none;
	text-align: justify;
	text-align-last: left;
	vertical-align: top;
}
table.labeled-list td:first-child {
	/**
	allows centering unlabeled items
	*/
	text-align-last: center;
}
table.labeled-list ol, table.labeled-list ul {
	margin: 0em .5em 0em 1em;
}
table.labeled-list li ol, table.labeled-list li ul {
	margin-left: 1.5em;
}

table.conversation th {
	/**
	styles the name of the speaker
	*/
	border: none;
	background: none;
	text-align: right;
	vertical-align: top;
}
table.conversation td {
	/**
	styles what the speaker said
	*/
	border: none;
	background: none;
	text-align: justify;
	vertical-align: top;
}
table.conversation td:first-child {
	/**
	allows unspoken events to be centered
	*/
	text-align: center;
}

input {
	text-align: center;
}
input[type="text"] {
	cursor: text;
}
input[type="text"]:disabled {
	cursor: default;
}
input[type="checkbox"] {
	margin: .5em;
	width: 1em;
	height: 1em;
	cursor: pointer;
}
input[type="checkbox"]:disabled {
	cursor: default;
}
input[type="radio"] {
	margin: .5em;
	width: 1em;
	height: 1em;
	cursor: pointer;
}
input[type="radio"]:disabled {
	cursor: default;
}
input[type="range"] {
	width: 9.6em;
	height: 1.2em;
	cursor: pointer;
}
input[type="range"]:disabled {
	cursor: default;
}
input[type="button"], input[type="submit"], button {
	margin: .5em;
	cursor: pointer;
}
input[type="button"]:disabled, input[type="submit"]:disabled, button:disabled {
	cursor: default;
}
select {
	cursor: pointer;
}
select:disabled {
	cursor: default;
}
option {
	cursor: pointer;
}
option:disabled {
	cursor: default;
}

textarea {
	padding: .5em;
	width: 15em;
	height: 8em;
	font-family: inherit;
	font-size: 1em;
}

sup, sub {
	position: relative;
	top: -.4em;
	vertical-align: baseline;
}

sub { 
	top: .4em; 
}

mark {
	padding: .1em;
}

label {
	cursor: pointer;
}

section {
	/**
	This is basically a replacement for paragraph tags.
	(<p> tags don't allow <div> tags or many other tags inside them)
	*/
	display: block;
	margin: 1em 0em;
	text-align: justify;
	-moz-text-align-last: center;
	text-align-last: center;
}

footer {
	margin: 1.5em 3em 0em;
}

.generic-background {
	background: white;
}
.generic-border {
	border: .05em solid black;
}

.dialog-container {
	max-width: 35%;
	height: 50%;
	-ms-transform: scale(.001, .001);
	-webkit-transform: scale(.001, .001);
	transform: scale(.001, .001);
	transition: .5s;
}
.dialog-container .x {
	position: absolute;
	right: .5rem;
	top: .5rem;
	font-family: sans-serif;
	color: red;
	cursor: pointer;
}
.dialog-container .x:hover {
	font-weight: bold;
}
.dialog {  /* <dialog> formatting is replicated (mostly) because it isn't widely supported yet */
	box-sizing: content-box;  /* This prevents the border from crowding out the content in extreme screen circumstances. */
	z-index: 10;
	border: 12px solid #aadddd;  /* This is in pixels in order to prevent random scroll bars appearing (probably because of otherwise getting a fraction of a pixel). */
	border-radius: 4vh 0vh 4vh 4vh;
	padding: 1em;
	max-width: 100%;
	max-height: 100%;
	background: white;
	overflow: auto;
}
.dialog .buttons {
	display: block;
	margin-top: .5em;
}

note- {
	/**
	my custom tag
	puts notes in text
	*/
	display: inline;
	position: relative;
	color: blue;
	font-weight: normal;
	cursor: help;
}
note-::before {
	/**
	makes a * where there's a note
	setting the variable --before-content can change the content
	*/
	content: "*";  /* for browsers that don't support var() */
	content: var(--before-content, "*");
}
.trigger {
	position: relative;
}
note-:hover {
	text-decoration: underline;
}
note- div, .trigger div, .pop-up div {
	/**
	This needs to come before the styling for <div>s with child selectors
	*/
	max-height: 20em;
	text-align: justify;
	-moz-text-align-last: center;
	text-align-last: center;
	overflow: auto;
}
note- > div, .trigger > div, .pop-up {
	font-size: .75em;  /* This changes the "em" value for everything else (including "::before" and "::after"). */
	position: absolute;
	left: -1em;
	bottom: 2em;
	z-index: 1;
	border-radius: .5em;
	padding: .5em;
	min-width: 15em;
	background: white;
	color: black;
	overflow: visible;
	box-shadow: 0.25em 0.25em 0.75em #222;
	opacity: 0;
	pointer-events: none;
	transition: opacity .5s linear .5s;
}
.pop-up {
	transition: opacity .5s linear;
}
note- > div::before, .trigger > div::before, .pop-up::before {
	/**
	This makes sure you don't have the leave the trigger before hovering over the pop-up.
	*/
	content: "";
	position: absolute;
	left: 0em;
	bottom: -.8em;
	width: 15em;
	height: .8em;
}
note- > div::after, .trigger > div::after, .pop-up::after {
	/**
	makes the protruding triangle of the pop-up
	*/
	content: "";
	position: absolute;
	left: 1em;
	bottom: -1em;
	border-width: .5em;
	border-style: solid;
	border-color: white transparent transparent transparent;
}
note-:hover > div, .trigger:hover > div, .pop-up.active {
	/**
	makes the pop-up appear when the note or trigger is hovered over
	*/
	opacity: 1;
	pointer-events: auto;
}

over- {
	/**
	my custom tag
	overlines things
	*/
	display: inline;
	margin: 0em;
	border: 0em;
	padding: 0em;
	text-decoration: overline;
}

.list {
	/**
	for left-aligned content as close to the middle of the page as possible
	*/
	display: table;
	margin: auto;
	text-align: justify;
	-moz-text-align-last: left;
	text-align-last: left;
}
.list p {
	-moz-text-align-last: left;
	text-align-last: left;
}
.list section {
	-moz-text-align-last: left;
	text-align-last: left;
}

.page-jump-list {
	/**
	styles the section of the page that navigates to other sections of the page
	*/
	display: table;
	margin: 2em auto;
	padding: 0em 1em 1em;
	background: white;
	background: rgba(255, 255, 255, .5);
}
.page-jump-list::after {
	content: "";
	display: table;
	clear: both;
}
.page-jump-list ol {
	/**
	makes ordered lists in page-jump-list sections account for the padding of that section
	ordinary list padding is 2.5
	*/
	padding-left: 1.5em;
}
.to-top {
	text-align: center;
}
.page-jump-sections {
	max-width: 100%;
}

.user-section {
	position: absolute;
	top: 2em;
	right: 3em;
	z-index: 2;
}
#userSettings {
	display: none;
}
#signOut {
	display: none;
}

.details {
	/**
	allows items to be hidden or displayed like the <details> element when that element isn't supported
	*/
	display: block;
	margin: .5rem;
	border: .05rem solid black;
	border-top: none;
	border-radius: .5rem;
	overflow: visible;
}
.details > * {
	display: none;
}
.details > .summary {
	display: block;
	border-top: .05rem solid black;
	border-radius: .5rem;
	padding: .25rem;
	background-color: #eeeeee;
	text-align: center;
	font-size: 1.5em;
	font-weight: bold;
	overflow: visible;
}
.details > .summary:hover {
	text-decoration: underline;
	cursor: pointer;
}
.details > input:first-child {
	display: none;
}
.details > input:first-child:checked ~ * {  /* :not(.summary) is more specific than * (and overrides some of the following formatting) */
	display: initial;
}
.details > input:first-child:checked ~ .summary {
	display: block;
	margin-bottom: 1rem;
	border: .05rem solid black;
}
.details > input:first-child:checked ~ div {
	display: inline-block;
}
.details > input:first-child:checked ~ ol, .details > input:first-child:checked ~ ul, .details > input:first-child:checked ~ .list, .details > input:first-child:checked ~ table {
	/**
	ensures elements styled as "table" here continue to be so
	(it makes no sense why table elements need this)
	*/
	display: table;
}
.details > input:first-child:checked ~ section, .details > input:first-child:checked ~ h1, .details > input:first-child:checked ~ h2, .details > input:first-child:checked ~ h3, .details > input:first-child:checked ~ h4, .details > input:first-child:checked ~ h5, .details > input:first-child:checked ~ h6 {
	display: block;
}
.details > input:first-child:checked ~ note-, .details > input:first-child:checked ~ over- {
	display: inline;
}

.current-selection {
	color: darkgray;
	font-weight: bold;
	animation: none;
	cursor: default;
}
.current-selection a, .current-selection > a, li.current-selection a {
	color: darkgray;
	animation: none;
	cursor: default;
}

.circle {
	/**
	circles things (like text)
	*/
	border: .05em solid black;
	border-radius: .5em;
}

.full-spin {
	/**
	spins something (like a <div>) in a full rotation
	*/
	transition: 1s;
	-ms-transform: rotate(360deg);  /* Internet Explorer 9 */
	-webkit-transform: rotate(360deg);  /* Safari */
	transform: rotate(360deg);  /* standard syntax */
}

.half-spin {
	/**
	spins something (like a div) in a half rotation
	*/
	transition: .5s;
	-ms-transform: rotate(180deg);  /* Internet Explorer 9 */
	-webkit-transform: rotate(180deg);  /* Safari */
	transform: rotate(180deg);  /* standard syntax */
}

h1.main-title {
	/**
	formats the main title of the website/page
	*/
	color: white;
}

div.darkener {
	/**
	darkens the screen
	*/
	display: -webkit-flex;
	display: -ms-flex;
	display: flex;
	position: fixed;
	left: 0vw;
	top: 0vh;
	z-index: 5;
	width: 100vw;
	height: 100vh;
	background-color: rgba(0, 0, 0, 0);
	pointer-events: none;
	transition: background-color .5s;
}

table.compact {
	visibility: hidden;
}

/*
@keyframes animation-name {
	from {
		starting position(s)
	}

	to {
		ending position(s)
	}

	An indefinite number of percentages (with "%") can be used instead of "from" and "to".
}

.class {
	animation-name: animation-name;
	animation-duration: 0s;
	animation-timing-function: ease;
	animation-delay: 0s;
	animation-iteration-count: 1;
	animation-direction: normal;
	animation-fill-mode: none;  // I like "forwards" better.
}

*/
@font-face {
	font-family: "Bad Duck";
	src: url("https://epicenterprograms.github.io/standards/fonts/Bad Duck.ttf") format("truetype");
}

@media (prefers-color-scheme: dark) {
	/**
	changes to a dark theme if that's what the  user prefers
	*/
	body {
		background: black;
		background-image: repeating-linear-gradient(black, black 24vh, red 25vh, black 26vh, black 49vh, green 50vh, black 51vh, black 74vh, blue 75vh, black 76vh, black 100vh);
		color: white;
	}
	main {
		background: rgba(128, 128, 128, .5);
	}

	h1, h2, h3, h4, h5, h6 {
		color: #0ef;
	}

	a {
		color: yellow;
	}

	th, td {
		border: .05em solid #aaa;
	}
	th {
		background: #555;
	}
	td {
		background: #111;
	}

	button, input[type="button"], input[type="submit"] {
		border: .15em solid gray;
		padding: .2em .6em;
		border-radius: .5em;
		background: black;
		color: yellow;
	}
	button:active, input[type="button"]:active, input[type="submit"]:active {
		background: yellow;
		color: black;
	}
	button:disabled, input[type="button"]:disabled, input[type="submit"]:disabled {
		border: .15em solid #333;
		background: #888;
		color: #666;
	}
	button.hide-aside {
		color: yellow;
	}
	button.hide-aside:active {
		background: none;
		color: red;
	}

	input {
		border-style: none;
		background: #111;
		color: white;
	}
	input:disabled {
		background: gray;
		color: black;
	}

	textarea {
		background: black;
		color: white;
	}

	dialog, .dialog {
		border-color: #00f;
		background: #222;
	}

	.page-jump-list {
		background: rgba(100, 100, 100, .5);
	}

	nav, body.navigation {
		background: black;
		background-image: linear-gradient(#111, #444);
	}
	body.navigation a {
		color: white;
	}
	nav.hidden-left-nav {
		border-right: 1em solid #00f;
	}
	nav.hidden-left-nav::after {
		border-color: white;
		background: #555;
		color: #ccc;
	}
	nav.top-nav {
		background: #333;
	}
	nav.top-nav div.drop-down div {
		background: #777;
		color: #eee;
	}
	nav.top-nav div.drop-down>div:first-child {
		background: #333;
		color: #ddd;
	}
	nav.top-nav div.drop-down:hover>div:first-child, nav.top-nav div.drop-down:focus>div:first-child, nav.top-nav div.drop-down:focus-within>div:first-child {
		background: #aaa;
		color: black;
	}
	nav.top-nav>button {
		background: #777;
		color: #eee;
	}

	aside, .right-section {
		background: #222;
		background-image: linear-gradient(#111, #444);
		background-attachment: fixed;
	}
	aside::before {
		color: #0ef;
	}

	.generic-background {
		background: black;
	}
	.generic-border {
		border-color: white;
	}

	.details, .details > .summary, .details > input:first-child:checked ~ .summary {
		border-color: #ccc;
	}
	.details > .summary {
		background: #222;
		color: #0ef;
	}
}

@media (max-width: 1000px) {
	/**
	styles things for mobile devices
	*/
	body:not(.navigation) {
		padding: 0%;
		font-size: 3rem;
	}
	main {
		padding: 1% 7% 5% 7%;
		width: 100%;
		font-size: 3rem;
	}
	div {
		font-size: 3rem;
	}
	table {
		display: inline-block;
		max-width: 100%;
		font-size: 2.4rem;
		overflow: auto;
	}
	th {
		font-size: 2.4rem;
	}
	td {
		font-size: 2.4rem;
	}
	button {
		font-size: 2.4rem;
	}
	input {
		font-size: 2.4rem;
	}
	input[type="range"] {  /* the height doesn't resize right with just 1.2em */
		margin: calc(1.2em/3) calc(9.6em/3) calc(1.2em/3) calc(9.6em/3);
		width: calc(9.6em/3);
		height: calc(1.2em/3);
		transform: scale(3);
	}
	select {
		font-size: 2.4rem;
	}
	footer {
		margin: 1.5em 3em;
	}
	.user-section {
		display: block;
		position: static;
	}
	.dialog-container {
		max-width: 90%;
		max-height: 90%;
		height: 60%;  /* //// ? */
	}
	.details {
		display: inline-table;
		table-layout: fixed;
		width: 100%;
		overflow: auto;
	}
	.details > input:first-child:checked ~ table {
		display: inline-block;
	}
	/*
	table.labeled-list tbody, table.labeled-list tr, table.labeled-list th, table.labeled-list td {
		display: block;
		text-align: justify;
		text-align-last: center;
	}
	*/
	nav.hidden-left-nav {
		left: -75.5vw;
		width: 75.5vw;
		padding: 0rem;
	}
	nav.hidden-left-nav:hover {
		-ms-transform: translateX(75vw);
		-webkit-transform: translateX(75vw);
		transform: translateX(75vw);
	}
	nav.hidden-left-nav::after {
		height: 10vh;
	}
	iframe.top-nav, nav.top-nav, .site-editor {
		width: 100%;
	}
	/*
	nav.hidden-left-nav {
		left: -60.5vw;
		width: 60.5vw;
	}
	nav.hidden-left-nav:hover {
		-ms-transform: translateX(60vw);
		-webkit-transform: translateX(60vw);
		transform: translateX(60vw);
	}
	nav.hidden-left-nav::after {
		height: 16vh;
		border-radius: 0vh 3vh 3vh 0vh;
	}
	body.navigation.bigger {
		font-size: 2.5rem;
	}
	*/
	aside {
		width: 80%;
	}
	aside.displayed {
		left: 20%;
	}
}

@media (min-width: 425px) {
	/**
	tries to account for the iframe size of hidden left navs
	*/
	body.navigation.bigger {
		font-size: 3rem;
	}
}
